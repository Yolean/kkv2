quarkus:
  container-image:
    build: true
    image: yolean/kkv2
  tls:
    trust-all: true
  jib:
    #platforms: linux/arm64/v8
    platforms: linux/amd64

"%dev":
  quarkus:
    kafka:
      devservices:
        enabled: true
  
mp:
  messaging:
    incoming:
      ops:
        auto:
          offset:
            reset: ${AUTO_OFFSET_RESET:none}
        bootstrap:
          servers: bootstrap.kafka:9092
        connector: smallrye-kafka
        #group:
        #  id: site-${YOLEANSITE_ID}_events-v1-backend
        key:
          deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
        topic: ${OPERATIONS_TOPIC_NAME}
        value:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer

kkv:
  #namespace: ${YOLEANSITE_ID}
  namespace: kkv
  target:
    port: 3000 #8090
  endpointslice:
    name: kkv-test-client-bvr9r
    
#"%prod":
#  kafka:
#    bootstrap:
#      servers: one-node-cluster.kkv.svc.cluster.local:9092

#mp:
#  messaging:
#    incoming:
#      config: 
#        connector: smallrye-kafka
#        value:
#          deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
#        key:
#          deserializer: org.apache.kafka.common.serialization.StringDeserializer
#        auto:
#          offset:
#            reset: earliest
#        consumer-rebalance-listener:
#          name: config.rebalancer
#        topic: config
#        bootstrap:
#          servers: one-node-cluster.kkv.svc.cluster.local:9092
